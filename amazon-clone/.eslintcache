[{"D:\\Amazon_Clone\\amazon-clone\\src\\Header.js":"1","D:\\Amazon_Clone\\amazon-clone\\src\\Product.js":"2","D:\\Amazon_Clone\\amazon-clone\\src\\Home.js":"3","D:\\Amazon_Clone\\amazon-clone\\src\\App.js":"4","D:\\Amazon_Clone\\amazon-clone\\src\\CheckoutProduct.js":"5","D:\\Amazon_Clone\\amazon-clone\\src\\Checkout.js":"6","D:\\Amazon_Clone\\amazon-clone\\src\\reducer.js":"7","D:\\Amazon_Clone\\amazon-clone\\src\\reportWebVitals.js":"8","D:\\Amazon_Clone\\amazon-clone\\src\\firebase.js":"9","D:\\Amazon_Clone\\amazon-clone\\src\\Login.js":"10","D:\\Amazon_Clone\\amazon-clone\\src\\StateProvider.js":"11","D:\\Amazon_Clone\\amazon-clone\\src\\Subtotal.js":"12","D:\\Amazon_Clone\\amazon-clone\\src\\index.js":"13","D:\\Amazon_Clone\\amazon-clone\\src\\Payment.js":"14","D:\\Amazon_Clone\\amazon-clone\\src\\axios.js":"15","D:\\Amazon_Clone\\amazon-clone\\src\\Orders.js":"16","D:\\Amazon_Clone\\amazon-clone\\src\\Order.js":"17"},{"size":1960,"mtime":1620972503787,"results":"18","hashOfConfig":"19"},{"size":1125,"mtime":1607445788812,"results":"20","hashOfConfig":"19"},{"size":2255,"mtime":1606332030251,"results":"21","hashOfConfig":"19"},{"size":1931,"mtime":1620968958296,"results":"22","hashOfConfig":"19"},{"size":1042,"mtime":1620971255828,"results":"23","hashOfConfig":"19"},{"size":1249,"mtime":1620972874491,"results":"24","hashOfConfig":"19"},{"size":1174,"mtime":1620973215903,"results":"25","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"19"},{"size":698,"mtime":1620841352671,"results":"27","hashOfConfig":"19"},{"size":2312,"mtime":1620917653931,"results":"28","hashOfConfig":"19"},{"size":486,"mtime":1620905903991,"results":"29","hashOfConfig":"19"},{"size":1308,"mtime":1620931868352,"results":"30","hashOfConfig":"19"},{"size":689,"mtime":1606391373268,"results":"31","hashOfConfig":"19"},{"size":7122,"mtime":1620973387243,"results":"32","hashOfConfig":"19"},{"size":271,"mtime":1620997622155,"results":"33","hashOfConfig":"19"},{"size":1160,"mtime":1620972119938,"results":"34","hashOfConfig":"19"},{"size":1368,"mtime":1620971282064,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1s1puun",{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Amazon_Clone\\amazon-clone\\src\\Header.js",["80","81"],"import React from \"react\";\r\nimport logo from \"./images/logo-dark.svg\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Header() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n\r\n  const handleAuthentication = () => {\r\n    if(user){\r\n      // to sign out using firebase\r\n      auth.signOut();\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\">\r\n        <img className=\"header__logo\" src={logo}></img>\r\n      </Link>\r\n\r\n      <div className=\"header__search\">\r\n        <input className=\"header__searchInput\" type=\"text\" />\r\n        <SearchIcon className=\"header__searchIcon\" />\r\n        {/* Logo */}\r\n      </div>\r\n      <div className=\"header__nav\">\r\n        <Link to={!user && '/login'}>\r\n        <div onClick={handleAuthentication} className=\"header__option\">\r\n  <span className=\"header__optionLineOne\">Hello, {user? user.email.substring(0, (user.email.search(/@/))) : \"Guest\" }</span>\r\n          <span className=\"header__optionLineTwo\">{user ? 'Sign Out' : 'Sign In' }</span>\r\n        </div>\r\n        </Link>\r\n\r\n        <Link to=\"/orders\">\r\n        <div className=\"header__option\">\r\n          <span className=\"header__optionLineOne\">Returns</span>\r\n          <span className=\"header__optionLineTwo\">&Orders</span>\r\n        </div>\r\n        </Link>\r\n\r\n        <Link to=\"/checkout\">\r\n          <div className=\"header__optionBasket\">\r\n            <span className=\"header__optionLineOne\">\r\n              <ShoppingCartOutlinedIcon />\r\n            </span>\r\n            <span className=\"header__optionLineTwo header__basketCount\">\r\n              {basket?.length}\r\n            </span>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n",["82","83"],"D:\\Amazon_Clone\\amazon-clone\\src\\Product.js",["84","85","86"],"import React from \"react\";\r\nimport image1 from \"./images/lean_startup.jpg\";\r\nimport \"./Product.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n  const [{ basket }, dispatch] = useStateValue();\r\n\r\n  // console.log(\"this is the basket \", basket);\r\n  const addToBasket = () => {\r\n    // dispatch the item into the data layer\r\n\r\n    dispatch({\r\n      type: \"ADD_TO_CART\",\r\n      item: {\r\n        id: id,\r\n        title: title,\r\n        image: image,\r\n        price: price,\r\n        rating: rating,\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"product\">\r\n      <div className=\"product__info\">\r\n        <p>{title}</p>\r\n        <p className=\"product__price\">\r\n          <strong>₹ {price}</strong>\r\n        </p>\r\n\r\n        <div className=\"product__ratings\">\r\n          {Array(rating)\r\n            .fill()\r\n            .map((_, i) => (\r\n              <p>⭐</p>\r\n            ))}\r\n        </div>\r\n      </div>\r\n      <img src={image}></img>\r\n\r\n      <button onClick={addToBasket}>Add to Cart</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","D:\\Amazon_Clone\\amazon-clone\\src\\Home.js",["87"],"import React from \"react\";\r\nimport \"./Home.css\";\r\nimport banner from \"./images/amazon_banner.jpg\";\r\nimport Product from \"./Product.js\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"home__container\">\r\n        <img src={banner} className=\"home__image\" />\r\n      </div>\r\n\r\n      <div className=\"home__row\">\r\n        <Product\r\n          id=\"1004534531\"\r\n          title=\"The Lean Startup: How Constant Innovation Creates Radically Successful Businesses\"\r\n          price={523}\r\n          image=\"http://4.bp.blogspot.com/-YIMcWtDCIo8/ThT0l_2IisI/AAAAAAAAA70/36mkMo3o-fw/s400/ERIES_Enso_in_Blue_Master.png\"\r\n          rating={5}\r\n        />\r\n        <Product\r\n          id=\"1012342342\"\r\n          title=\"Vaseline Intensive Care Deep Restore Body Lotion, 400 ml\"\r\n          price={199}\r\n          image=\"https://images-na.ssl-images-amazon.com/images/I/51WWDSRmePL._SX679_.jpg\"\r\n          rating={4}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"home__row\">\r\n        <Product\r\n          id=\"5465444483\"\r\n          title=\"Happilo 100% Natural Premium Californian Almonds 500g\"\r\n          price={468.75}\r\n          image=\"https://img2.exportersindia.com/product_images/bc-full/2018/9/5883555/californian-almonds-1536828366-4296670.jpeg\"\r\n          rating={4}\r\n        />\r\n        <Product\r\n          id=\"2312423834\"\r\n          title=\"Vivo X50 Pro (Alpha Grey, 8GB RAM, 256GB Storage)\"\r\n          price={49990.0}\r\n          image=\"https://www.gizmochina.com/wp-content/uploads/2020/03/vivo-V19.jpg\"\r\n          rating={4}\r\n        />\r\n\r\n        <Product\r\n          id=\"2398723765\"\r\n          title=\"boAt Bassheads 100 in Ear Wired Earphones with Mic(Black)\"\r\n          price={449}\r\n          image=\"https://images-na.ssl-images-amazon.com/images/I/719elVA3FvL._SL1500_.jpg\"\r\n          rating={4}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"home__row\">\r\n        <Product\r\n          id=\"35345454765\"\r\n          title=\"Classmate 2100117 Soft Cover 6 Subject Spiral Binding Notebook, Single Line, 300 Pages\"\r\n          price={138}\r\n          image=\"https://m.media-amazon.com/images/I/71ulyHAa-hL._AC_UL480_FMwebp_QL65_.jpg\"\r\n          rating={5}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\Amazon_Clone\\amazon-clone\\src\\App.js",["88","89"],"D:\\Amazon_Clone\\amazon-clone\\src\\CheckoutProduct.js",["90","91"],"D:\\Amazon_Clone\\amazon-clone\\src\\Checkout.js",["92","93","94"],"import react from \"react\";\r\nimport \"./Checkout.css\";\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport Subtotal from \"./Subtotal.js\";\r\n\r\nfunction Checkout() {\r\n  const [{ basket, user }, dispatch] = useStateValue();\r\n  return (\r\n    <div className=\"checkout\">\r\n      <div className=\"checkout__left\">\r\n        <img\r\n          className=\"checkout__ad\"\r\n          src=\"https://wordstream-files-prod.s3.amazonaws.com/s3fs-public/styles/simple_image/public/images/media/images/banner-ads-examples-disney%2B.jpg?so0uQt68ZOFb5FN0rSzSWtfGinew87_K&itok=kJxsCgPs\"\r\n        />\r\n        <h2 className=\"checkout__title\">Your Shopping Basket</h2>\r\n        <h3>Hello, {user?.email}</h3>\r\n        <strong> </strong>\r\n\r\n        {basket?.map((item) => (\r\n          <CheckoutProduct\r\n            id={item.id}\r\n            title={item.title}\r\n            image={item.image}\r\n            price={item.price}\r\n            rating={item.rating}\r\n          />\r\n        ))}\r\n\r\n        {/* CheckoutProduct */}\r\n        {/* CheckoutProduct */}\r\n        {/* CheckoutProduct */}\r\n      </div>\r\n\r\n      <div className=\"checkout__right\">\r\n        <Subtotal />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checkout;\r\n","D:\\Amazon_Clone\\amazon-clone\\src\\reducer.js",[],"D:\\Amazon_Clone\\amazon-clone\\src\\reportWebVitals.js",[],"D:\\Amazon_Clone\\amazon-clone\\src\\firebase.js",[],"D:\\Amazon_Clone\\amazon-clone\\src\\Login.js",["95"],"import React, { useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { auth } from './firebase';\r\nimport './Login.css';\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const signIn = e=> {\r\n        e.preventDefault();\r\n\r\n        //some fancy firebase stuff for authentication\r\n\r\n        auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(auth =>{\r\n                // Redirecting to the homepage\r\n                history.push('/');\r\n            })\r\n            .catch(error => alert(error.message));\r\n    }\r\n\r\n    const register= e => {\r\n        e.preventDefault();\r\n\r\n         //Here do some fancy firebase stuff for registration\r\n        auth\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then((auth) =>{\r\n            // It successfully created a new user with email and password\r\n            if(auth){\r\n                history.push('/');\r\n            }\r\n        })\r\n        .catch(error => alert(error.message));\r\n        \r\n   \r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Link to=\"/\">\r\n            <img \r\n                className=\"login__logo\" \r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1280px-Amazon_logo.svg.png\" \r\n            />\r\n            </Link>\r\n\r\n            <div className=\"login__container\">\r\n                <h1>Login</h1>\r\n\r\n                <form>\r\n                    <h5>Email</h5>\r\n                    <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)}></input>\r\n                    <h5>Password</h5>\r\n                    <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                    <button className=\"login__signInButton\" type=\"submit\" onClick={signIn}>Login</button>\r\n                </form>\r\n                <p>\r\n                    By signing-in you agree to AMAZON-FAKE-CLONE\r\n                    Conditions of the Use & Privacy Notice.\r\n                </p>\r\n                <button className=\"login__registerButton\" onClick={register}>Create your Amazon Account</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n",["96","97"],"D:\\Amazon_Clone\\amazon-clone\\src\\StateProvider.js",[],"D:\\Amazon_Clone\\amazon-clone\\src\\Subtotal.js",["98"],"import React from \"react\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getCartTotal } from \"./reducer\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { useHistory } from \"react-router-dom\"; \r\nimport \"./Subtotal.css\";\r\n\r\nfunction Subtotal() {\r\n  const history = useHistory();\r\n  const [{ basket }, dispatch] = useStateValue();\r\n\r\n  //   var sum = 0;\r\n  //   for (var i = 0; i < basket.length; i++) {\r\n  //     sum += basket[i].price;\r\n  //   }\r\n\r\n  return (\r\n    <div className=\"subtotal\">\r\n      <CurrencyFormat\r\n        renderText={(value) => (\r\n          <>\r\n            <p>\r\n              {/* Part of the homework  */}\r\n              Subtotal ({basket?.length} items):\r\n              <strong>{value}</strong>\r\n            </p>\r\n            <small className=\"subtotal__gift\">\r\n              <input type=\"checkbox\" />\r\n              This order contains a gift\r\n            </small>\r\n          </>\r\n        )}\r\n        decimalScale={2}\r\n        value={getCartTotal(basket)} /* Part of the homework*/\r\n        displayType={\"text\"}\r\n        thousandSeparator={true}\r\n        prefix={\"₹\"}\r\n      ></CurrencyFormat>\r\n\r\n      <button onClick={e=> history.push('/payments')} className=\"subtotal__btn\" >Proceed to CheckOut</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Subtotal;\r\n","D:\\Amazon_Clone\\amazon-clone\\src\\index.js",[],"D:\\Amazon_Clone\\amazon-clone\\src\\Payment.js",["99"],"import React from 'react'\r\nimport {useState, useEffect} from 'react'\r\nimport './Payment.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport CheckoutProduct from \"./CheckoutProduct\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { getCartTotal } from \"./reducer\";\r\nimport axios from './axios.js'\r\nimport { db } from './firebase';\r\n\r\nfunction Payment() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n\r\n    const history = useHistory();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n\r\n        // Variables declaration in react types\r\n    const [error, setError] = useState(null)\r\n    const [disabled, setDisabled] = useState(true)\r\n\r\n    const [clientSecret, setClientSecret ] = useState(true);\r\n\r\n    useEffect(()=>{\r\n\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () =>{\r\n            // axios is used to make get/post requests\r\n            const response = await axios({\r\n                method: 'POST',\r\n                // Stripe expects the total in a currencies subunit\r\n                url: `/payments/create?total=${getCartTotal(basket)*100}`\r\n            })\r\n            setClientSecret(response.data.clientSecret);\r\n        } \r\n        \r\n        getClientSecret();\r\n    },[basket])\r\n\r\n    // console.log('The SECRET IS >>>', clientSecret)\r\n\r\n    const handleSubmit = async (event) => {\r\n        // do all the stripe stuff\r\n        event.preventDefault();\r\n        // prevents user from clicking the button multiple times while payment is processing\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({paymentIntent }) => {\r\n            // paymentIntent = payment confirmation intent\r\n\r\n            //store to firestore\r\n            db\r\n            .collection('users')\r\n            .doc(user?.uid)\r\n            .collection('orders')\r\n            .doc(paymentIntent.id)\r\n            .set({\r\n                basket: basket,\r\n                amount: paymentIntent.amount,\r\n                created: paymentIntent.created,\r\n            })\r\n\r\n            \r\n            setSucceeded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            // Empty the basket once payment is done\r\n            dispatch({\r\n                type: 'EMPTY_BASKET'\r\n            })\r\n\r\n            // Once payment is successful redirect to the orders page\r\n            history.replace('/orders')\r\n\r\n         \r\n        })\r\n\r\n        // const payload = await stripe\r\n    }\r\n\r\n    const handleChange = e => {\r\n        // Listens for any changes in the CardElement \r\n        // and display any errors as the user types in their card details\r\n        setDisabled(e.empty);\r\n        setError(e.error? e.error.message : \"\");\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"payment\">\r\n            <div className=\"payment__container\">\r\n                <h1>Checkout(\r\n                    <Link to=\"/checkout\">{basket?.length} items</Link>\r\n                    )\r\n                    </h1>\r\n                </div>\r\n                {/* Payment section - delivery address */}\r\n                <div className=\"payment__section\">\r\n                  <div className=\"payment__title\">\r\n                      <h3>Delivery Address</h3>\r\n                      \r\n                  </div>\r\n                  <div className=\"payment__address\">\r\n                      {/* Optional chaining to prevent app crashes if no user is present */}\r\n                      <p>{user?.email}</p>\r\n                      <p>123 ABC Apartments, Bengaluru</p>\r\n                      <p>Karnataka, India</p>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Payment section - review items */}\r\n                <div className=\"payment__section\">\r\n                \r\n                    <div className=\"payment__title\">\r\n                    <h3>Review items for delivery</h3>\r\n                    </div>\r\n                    <div className=\"payment__items\">\r\n                        \r\n                        {basket.map(item => (\r\n                        <CheckoutProduct\r\n                            id={item.id}\r\n                            title={item.title}\r\n                            image={item.image}\r\n                            price={item.price}\r\n                            rating={item.rating}\r\n                        />\r\n                        ))}\r\n\r\n                    </div>\r\n                  \r\n                  </div>   \r\n\r\n                {/* Payment section - payment method */}\r\n                  <div className=\"payment__section\">\r\n                        <div className=\"payment__title\">\r\n                            <h3>Payment Method</h3>\r\n                        </div>\r\n                        <div className=\"payment__details\">\r\n                                {/* Stripe magic will happen here */}\r\n                                <form onSubmit={handleSubmit}>\r\n                                    <CardElement onChange={handleChange}/>\r\n                                    <div className=\"payment__priceContainer\">\r\n                                    <CurrencyFormat\r\n                                        renderText={(value) => (\r\n                                        <>\r\n                                            <p>\r\n                                            Order Total ({basket?.length} items):\r\n                                            <strong>{value}</strong>\r\n                                            </p>            \r\n                                        </>\r\n                                        )}\r\n                                        decimalScale={2}\r\n                                        value={getCartTotal(basket)} /* Part of the homework*/\r\n                                        displayType={\"text\"}\r\n                                        thousandSeparator={true}\r\n                                        prefix={\"₹\"}  //Symbol shortcut ctrl+alt+4\r\n                                    >\r\n                                        </CurrencyFormat>\r\n                                        <button disabled={processing || disabled || succeeded}>\r\n                                            <span>{processing? <p>Processing</p>: \"Buy Now\"}</span>\r\n                                        </button>\r\n                                    </div>\r\n                                </form>\r\n                                {/* Display Errors */}\r\n                                {error && <div>{error}</div>}\r\n                                \r\n                        </div>\r\n                  </div>\r\n           \r\n            \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","D:\\Amazon_Clone\\amazon-clone\\src\\axios.js",[],"D:\\Amazon_Clone\\amazon-clone\\src\\Orders.js",["100","101"],"import React from 'react';\r\nimport {useState, useEffect} from 'react';\r\nimport './Orders.css';\r\nimport {db} from './firebase';\r\nimport { useStateValue } from './StateProvider';\r\nimport Order from './Order';\r\n\r\nfunction Orders() {\r\n\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const [orders, setOrders] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n            // Store all the orders of the current user\r\n        db\r\n        .collection('users')\r\n        .doc(user?.uid)\r\n        .collection('orders')\r\n        .orderBy('created','desc')\r\n        .onSnapshot(snapshot => {\r\n            setOrders(snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                data: doc.data()\r\n            })))\r\n        })     \r\n\r\n        }\r\n\r\n        else {\r\n            setOrders([])\r\n        }\r\n    },[user])\r\n        \r\n\r\n    return (\r\n        <div className=\"orders\">\r\n            <h1>Your Orders</h1>\r\n            <div className=\"orders__order\">\r\n                {orders?.map(order => (\r\n                    <Order order={order} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Orders;\r\n","D:\\Amazon_Clone\\amazon-clone\\src\\Order.js",[],{"ruleId":"102","severity":1,"message":"103","line":11,"column":28,"nodeType":"104","messageId":"105","endLine":11,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":22,"column":9,"nodeType":"108","endLine":22,"endColumn":50},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"102","severity":1,"message":"113","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"114","line":7,"column":12,"nodeType":"104","messageId":"105","endLine":7,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":41,"column":7,"nodeType":"108","endLine":41,"endColumn":24},{"ruleId":"106","severity":1,"message":"107","line":10,"column":9,"nodeType":"108","endLine":10,"endColumn":53},{"ruleId":"115","severity":1,"message":"116","line":20,"column":10,"nodeType":"117","messageId":"118","endLine":20,"endColumn":12},{"ruleId":"119","severity":1,"message":"120","line":44,"column":6,"nodeType":"121","endLine":44,"endColumn":8,"suggestions":"122"},{"ruleId":"102","severity":1,"message":"114","line":7,"column":12,"nodeType":"104","messageId":"105","endLine":7,"endColumn":18},{"ruleId":"106","severity":1,"message":"107","line":17,"column":7,"nodeType":"108","endLine":17,"endColumn":61},{"ruleId":"102","severity":1,"message":"123","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"103","line":8,"column":28,"nodeType":"104","messageId":"105","endLine":8,"endColumn":36},{"ruleId":"106","severity":1,"message":"107","line":12,"column":9,"nodeType":"108","endLine":15,"endColumn":11},{"ruleId":"106","severity":1,"message":"107","line":43,"column":13,"nodeType":"108","endLine":46,"endColumn":15},{"ruleId":"109","replacedBy":"124"},{"ruleId":"111","replacedBy":"125"},{"ruleId":"102","severity":1,"message":"103","line":10,"column":22,"nodeType":"104","messageId":"105","endLine":10,"endColumn":30},{"ruleId":"102","severity":1,"message":"126","line":53,"column":15,"nodeType":"104","messageId":"105","endLine":53,"endColumn":22},{"ruleId":"102","severity":1,"message":"114","line":10,"column":14,"nodeType":"104","messageId":"105","endLine":10,"endColumn":20},{"ruleId":"102","severity":1,"message":"103","line":10,"column":30,"nodeType":"104","messageId":"105","endLine":10,"endColumn":38},"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'image1' is defined but never used.","'basket' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["129"],"'react' is defined but never used.",["127"],["128"],"'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},"Update the dependencies array to be: [dispatch]",{"range":"132","text":"133"},[1206,1208],"[dispatch]"]